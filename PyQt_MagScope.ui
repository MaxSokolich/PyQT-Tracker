<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1600</width>
    <height>860</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <widget class="QTabWidget" name="tabWidget">
    <property name="geometry">
     <rect>
      <x>5</x>
      <y>10</y>
      <width>215</width>
      <height>780</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">font-size: 15pt;  font-family: Courier;</string>
    </property>
    <property name="currentIndex">
     <number>0</number>
    </property>
    <widget class="QWidget" name="tracking_tab">
     <attribute name="title">
      <string>Tracking</string>
     </attribute>
     <widget class="QLabel" name="robotblurlabel">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>490</y>
        <width>161</width>
        <height>20</height>
       </rect>
      </property>
      <property name="text">
       <string>Blur:</string>
      </property>
     </widget>
     <widget class="QToolButton" name="rightbutton">
      <property name="geometry">
       <rect>
        <x>110</x>
        <y>140</y>
        <width>60</width>
        <height>21</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QToolButton {
                color: rgb(255, 255, 255);
                background-color: rgb(0, 0, 0);
                border-style: outset;
                border-width: px;
                border-radius: 2px;
                border-color: rgb(0, 0, 0);
                font: bold 16px;
                min-width: 1em;
                padding: 1px;
            }
            QToolButton:hover {
                background-color: rgb(100, 100, 100);
                color: rgb(255, 255, 255);
                border-color: rgb(100, 100, 100);
            }
            QToolButton:pressed {
                background-color: rgb(100, 100, 100);
                border: 2px solid rgb(100, 100, 100);
                border-style: inset;
                padding-left: 5px;
                padding-top: 5px;
            }</string>
      </property>
      <property name="text">
       <string>...</string>
      </property>
      <property name="autoRepeat">
       <bool>true</bool>
      </property>
      <property name="autoRepeatInterval">
       <number>50</number>
      </property>
      <property name="arrowType">
       <enum>Qt::RightArrow</enum>
      </property>
     </widget>
     <widget class="QPushButton" name="choosevideobutton">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>0</y>
        <width>165</width>
        <height>25</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">     QPushButton {
                color: rgb(255, 255, 255);
                background-color: rgb(0, 0, 0);
                border-style: outset;
                border-width: 2px;
                border-radius: 10px;
                border-color: rgb(0, 0, 0);
                min-width: 1em;
                padding: 1px;
            }
            QPushButton:hover {
                background-color: rgb(100, 100, 100);
                color: rgb(255, 255, 255);
                border-color: rgb(100, 100, 100);
            
            
            }</string>
      </property>
      <property name="text">
       <string>Choose Video</string>
      </property>
     </widget>
     <widget class="QLabel" name="croplengthlabel">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>290</y>
        <width>160</width>
        <height>20</height>
       </rect>
      </property>
      <property name="text">
       <string>Crop Length: 40</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pausebutton">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>110</y>
        <width>160</width>
        <height>20</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
                color: rgb(255, 255, 255);
                background-color: rgb(150, 0, 0);
                border-style: outset;
                border-width: 3px;
                border-radius: 10px;
                border-color: rgb(150, 0, 0);
                min-width: 1em;
                padding: 1px;
            }
            QPushButton:checked {
                color: rgb(255, 255, 255);
                background-color: rgb(0, 0, 150);
                border-style: inset;
                border-width: 3px;
                border-radius: 10px;
                border-color: rgb(0, 0, 150);
                font: bold 12px;
                min-width: 1em;
                padding: 1px;
            }
            QPushButton:hover {
                background-color: rgb(100, 100, 100);
                color: rgb(255, 255, 255);
                border-color: rgb(100, 100, 100);
                padding-left: 2px;
                padding-top: 2px;
            }</string>
      </property>
      <property name="text">
       <string>Pause</string>
      </property>
      <property name="checkable">
       <bool>true</bool>
      </property>
     </widget>
     <widget class="QPushButton" name="trackbutton">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>30</y>
        <width>160</width>
        <height>51</height>
       </rect>
      </property>
      <property name="cursor">
       <cursorShape>ArrowCursor</cursorShape>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
                color: rgb(255, 255, 255);
                background-color: rgb(0, 0, 255);
                border-style: outset;
                border-width: 3px;
                border-radius: 10px;
                border-color: rgb(0, 0, 255);
                min-width: 1em;
                padding: 6px;
            }
      
            QPushButton:checked {
                color: rgb(255, 255, 255);
                background-color: rgb(255, 0, 0);
                border-style: inset;
                border-width: 3px;
                border-radius: 10px;
                border-color: rgb(255, 0, 0);
                font: bold 16px;
                min-width: 1em;
               
            }
            QPushButton:hover {
                background-color: rgb(100, 100, 100);
                color: rgb(255, 255, 255);
                border-color: rgb(100, 100, 100);
                padding-left: 5px;
                padding-top: 5px;
            }</string>
      </property>
      <property name="text">
       <string>Track</string>
      </property>
      <property name="checkable">
       <bool>true</bool>
      </property>
     </widget>
     <widget class="QLabel" name="robotarealabel">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>450</y>
        <width>161</width>
        <height>20</height>
       </rect>
      </property>
      <property name="text">
       <string>Area:</string>
      </property>
     </widget>
     <widget class="QCheckBox" name="maskinvert_checkBox">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>210</y>
        <width>191</width>
        <height>21</height>
       </rect>
      </property>
      <property name="text">
       <string>Mask Invert: True</string>
      </property>
     </widget>
     <widget class="QPushButton" name="maskbutton">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>180</y>
        <width>161</width>
        <height>25</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
                color: rgb(255, 255, 255);
                background-color: rgb(0, 0, 0);
                border-style: outset;
                border-width: 2px;
                border-radius: 10px;
                border-color: rgb(0, 0, 0);
                min-width: 1em;
                padding: 1px;
            }
            QPushButton:hover {
                background-color: rgb(100, 100, 100);
                color: rgb(0, 0, 0);
                border-style: inset;
            }</string>
      </property>
      <property name="text">
       <string>Mask</string>
      </property>
      <property name="checkable">
       <bool>true</bool>
      </property>
      <property name="checked">
       <bool>false</bool>
      </property>
     </widget>
     <widget class="QLabel" name="CroppedVideoFeedLabel">
      <property name="geometry">
       <rect>
        <x>5</x>
        <y>520</y>
        <width>200</width>
        <height>200</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">background-color: rgb(0,0,0); border:2px solid rgb(255, 0, 0); </string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QToolButton" name="leftbutton">
      <property name="geometry">
       <rect>
        <x>30</x>
        <y>140</y>
        <width>60</width>
        <height>21</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QToolButton {
                color: rgb(255, 255, 255);
                background-color: rgb(0, 0, 0);
                border-style: outset;
                border-width: px;
                border-radius: 2px;
                border-color: rgb(0, 0, 0);
                font: bold 16px;
                min-width: 1em;
                padding: 1px;
            }
            QToolButton:hover {
                background-color: rgb(100, 100, 100);
                color: rgb(255, 255, 255);
                border-color: rgb(100, 100, 100);
            }
            QToolButton:pressed {
                background-color: rgb(100, 100, 100);
                border: 2px solid rgb(100, 100, 100);
                border-style: inset;
                padding-left: 5px;
                padding-top: 5px;
            }</string>
      </property>
      <property name="text">
       <string>...</string>
      </property>
      <property name="autoRepeat">
       <bool>true</bool>
      </property>
      <property name="autoRepeatInterval">
       <number>50</number>
      </property>
      <property name="arrowType">
       <enum>Qt::LeftArrow</enum>
      </property>
     </widget>
     <widget class="QPushButton" name="savedatabutton">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>350</y>
        <width>160</width>
        <height>41</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
                color: rgb(0, 0, 0);
                background-color: rgb(255, 255, 0);
                border-style: outset;
                border-width: 3px;
                border-radius: 10px;
                border-color: rgb(255, 255, 100);
                min-width: 1em;
                padding: 6px;
            }
            QPushButton:hover {
                background-color: rgb(255, 255, 200);
                color: rgb(0, 0, 0);
            }
            QPushButton:pressed {
                background-color: red;
                border: 2px solid red;
                padding-left: 5px;
                padding-top: 5px;
                border-style: inset;
                }</string>
      </property>
      <property name="text">
       <string>Save Data</string>
      </property>
      <property name="checkable">
       <bool>true</bool>
      </property>
     </widget>
     <widget class="QLabel" name="masksigmalabel">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>240</y>
        <width>160</width>
        <height>20</height>
       </rect>
      </property>
      <property name="text">
       <string>Mask Sigma: 0.7</string>
      </property>
     </widget>
     <widget class="QSlider" name="croplengthslider">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>310</y>
        <width>180</width>
        <height>25</height>
       </rect>
      </property>
      <property name="minimum">
       <number>5</number>
      </property>
      <property name="maximum">
       <number>200</number>
      </property>
      <property name="value">
       <number>40</number>
      </property>
      <property name="sliderPosition">
       <number>40</number>
      </property>
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
     </widget>
     <widget class="QLabel" name="robotvelocitylabel">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>470</y>
        <width>161</width>
        <height>20</height>
       </rect>
      </property>
      <property name="text">
       <string>Velocity:</string>
      </property>
     </widget>
     <widget class="QSlider" name="masksigmaslider">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>260</y>
        <width>180</width>
        <height>25</height>
       </rect>
      </property>
      <property name="maximum">
       <number>30</number>
      </property>
      <property name="sliderPosition">
       <number>7</number>
      </property>
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
     </widget>
     <widget class="QLabel" name="framelabel">
      <property name="geometry">
       <rect>
        <x>50</x>
        <y>80</y>
        <width>121</width>
        <height>31</height>
       </rect>
      </property>
      <property name="text">
       <string>Frame: </string>
      </property>
     </widget>
     <widget class="QPushButton" name="recordbutton">
      <property name="geometry">
       <rect>
        <x>40</x>
        <y>400</y>
        <width>111</width>
        <height>32</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
                color: rgb(255, 255, 255);
                background-color: rgb(0, 0, 0);
                border-style: outset;
                border-width: 3px;
                border-radius: 10px;
                border-color: rgb(0, 0, 0);
                min-width: 1em;
                padding: 6px;
            }
      
            QPushButton:checked {
                color: rgb(255, 255, 255);
                background-color: rgb(255, 0, 0);
                border-style: inset;
                border-width: 3px;
                border-radius: 10px;
                border-color: rgb(255, 0, 0);
                font: bold 16px;
                min-width: 1em;
               
            }
            QPushButton:hover {
                background-color: rgb(100, 100, 100);
                color: rgb(255, 255, 255);
                border-color: rgb(100, 100, 100);
                padding-left: 5px;
                padding-top: 5px;
            }</string>
      </property>
      <property name="text">
       <string>Record</string>
      </property>
      <property name="checkable">
       <bool>true</bool>
      </property>
     </widget>
    </widget>
    <widget class="QWidget" name="control_tab">
     <attribute name="title">
      <string>Control</string>
     </attribute>
     <widget class="QPushButton" name="controlbutton">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>10</y>
        <width>160</width>
        <height>51</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
                color: rgb(255, 255, 255);
                background-color: rgb(0, 0, 255);
                border-style: outset;
                border-width: 3px;
                border-radius: 10px;
                border-color: rgb(0, 0, 255);
                min-width: 1em;
                padding: 6px;
            }
      
            QPushButton:checked {
                color: rgb(255, 255, 255);
                background-color: rgb(255, 0, 0);
                border-style: inset;
                border-width: 3px;
                border-radius: 10px;
                border-color: rgb(255, 0, 0);
                font: bold 16px;
                min-width: 1em;
               
            }
            QPushButton:hover {
                background-color: rgb(100, 100, 100);
                color: rgb(255, 255, 255);
                border-color: rgb(100, 100, 100);
                padding-left: 5px;
                padding-top: 5px;
            }</string>
      </property>
      <property name="text">
       <string>Control</string>
      </property>
      <property name="checkable">
       <bool>true</bool>
      </property>
     </widget>
     <widget class="QRadioButton" name="controlautoradio">
      <property name="geometry">
       <rect>
        <x>90</x>
        <y>70</y>
        <width>111</width>
        <height>21</height>
       </rect>
      </property>
      <property name="text">
       <string>Automatic</string>
      </property>
     </widget>
     <widget class="QRadioButton" name="controlmanualradio">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>70</y>
        <width>81</width>
        <height>20</height>
       </rect>
      </property>
      <property name="text">
       <string>Manual</string>
      </property>
     </widget>
     <widget class="QSlider" name="gammaslider">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>324</y>
        <width>180</width>
        <height>31</height>
       </rect>
      </property>
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
     </widget>
     <widget class="QSlider" name="arrivalthreshslider">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>274</y>
        <width>180</width>
        <height>31</height>
       </rect>
      </property>
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
     </widget>
     <widget class="QLabel" name="arrivalthreshlabel">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>255</y>
        <width>201</width>
        <height>21</height>
       </rect>
      </property>
      <property name="text">
       <string>arivial thresh</string>
      </property>
     </widget>
     <widget class="QLabel" name="gammalabel">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>305</y>
        <width>201</width>
        <height>20</height>
       </rect>
      </property>
      <property name="text">
       <string>gamma</string>
      </property>
     </widget>
     <widget class="QSlider" name="rollingfrequencyslider">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>374</y>
        <width>180</width>
        <height>31</height>
       </rect>
      </property>
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
     </widget>
     <widget class="QLabel" name="rollingfrequencylabel">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>355</y>
        <width>201</width>
        <height>21</height>
       </rect>
      </property>
      <property name="text">
       <string>rolling frequency</string>
      </property>
     </widget>
     <widget class="QSlider" name="psislider">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>424</y>
        <width>180</width>
        <height>31</height>
       </rect>
      </property>
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
     </widget>
     <widget class="QLabel" name="psilabel">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>405</y>
        <width>201</width>
        <height>16</height>
       </rect>
      </property>
      <property name="text">
       <string>psi</string>
      </property>
     </widget>
     <widget class="QLabel" name="magneticfieldsimlabel">
      <property name="geometry">
       <rect>
        <x>5</x>
        <y>520</y>
        <width>200</width>
        <height>200</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">background-color: rgb(0,0,0); border:2px solid rgb(255, 0, 0); </string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QLabel" name="memorylabel">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>455</y>
        <width>201</width>
        <height>21</height>
       </rect>
      </property>
      <property name="text">
       <string>memory</string>
      </property>
     </widget>
     <widget class="QSlider" name="memoryslider">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>474</y>
        <width>180</width>
        <height>31</height>
       </rect>
      </property>
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
     </widget>
     <widget class="QPushButton" name="joystickbutton">
      <property name="geometry">
       <rect>
        <x>30</x>
        <y>110</y>
        <width>141</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
                color: rgb(255, 255, 255);
                background-color: rgb(255, 0, 255);
                border-style: outset;
                border-width: 3px;
                border-radius: 10px;
                border-color: rgb(255, 0, 255);
                min-width: 1em;
                padding: 6px;
            }
      
            QPushButton:checked {
                color: rgb(255, 255, 255);
                background-color: rgb(200, 0, 200);
                border-style: inset;
                border-width: 3px;
                border-radius: 10px;
                border-color: rgb(200, 0, 200);
                font: bold 16px;
                min-width: 1em;
			  padding-left: 5px;
                padding-top: 5px;
               
            }
            QPushButton:hover {
                background-color: rgb(100, 100, 100);
                color: rgb(255, 255, 255);
                border-color: rgb(100, 100, 100);
                padding-left: 5px;
                padding-top: 5px;
            }</string>
      </property>
      <property name="text">
       <string>Joystick</string>
      </property>
      <property name="checkable">
       <bool>true</bool>
      </property>
     </widget>
     <widget class="QSpinBox" name="acousticfreq_spinBox">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>170</y>
        <width>171</width>
        <height>31</height>
       </rect>
      </property>
      <property name="maximum">
       <number>3000000</number>
      </property>
     </widget>
     <widget class="QLabel" name="acousticfreqlabel">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>150</y>
        <width>191</width>
        <height>21</height>
       </rect>
      </property>
      <property name="text">
       <string>Acoustic Frequency</string>
      </property>
     </widget>
     <widget class="QPushButton" name="applyacousticbutton">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>210</y>
        <width>161</width>
        <height>25</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
                color: rgb(255, 255, 255);
                background-color: rgb(0, 0, 0);
                border-style: outset;
                border-width: 2px;
                border-radius: 10px;
                border-color: rgb(0, 0, 0);
                min-width: 1em;
                padding: 1px;
            }
            QPushButton:hover {
                background-color: rgb(100, 100, 100);
                color: rgb(0, 0, 0);
                border-style: inset;
            }</string>
      </property>
      <property name="text">
       <string>Apply</string>
      </property>
      <property name="checkable">
       <bool>true</bool>
      </property>
     </widget>
    </widget>
   </widget>
   <widget class="QLabel" name="VideoFeedLabel">
    <property name="geometry">
     <rect>
      <x>230</x>
      <y>30</y>
      <width>1330</width>
      <height>700</height>
     </rect>
    </property>
    <property name="mouseTracking">
     <bool>true</bool>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(0,0,0); border:2px solid rgb(255, 0, 0); </string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QSlider" name="frameslider">
    <property name="geometry">
     <rect>
      <x>230</x>
      <y>0</y>
      <width>1321</width>
      <height>30</height>
     </rect>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
   </widget>
   <widget class="QPlainTextEdit" name="plainTextEdit">
    <property name="geometry">
     <rect>
      <x>230</x>
      <y>735</y>
      <width>791</width>
      <height>91</height>
     </rect>
    </property>
    <property name="mouseTracking">
     <bool>true</bool>
    </property>
    <property name="verticalScrollBarPolicy">
     <enum>Qt::ScrollBarAlwaysOn</enum>
    </property>
    <property name="sizeAdjustPolicy">
     <enum>QAbstractScrollArea::AdjustToContentsOnFirstShow</enum>
    </property>
    <property name="centerOnScroll">
     <bool>false</bool>
    </property>
   </widget>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <resources/>
 <connections/>
</ui>
